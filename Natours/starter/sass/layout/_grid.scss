.row {

  max-width: $grid-width; //width: 1140px; // max-width: viewport가 지정한값보다 작으면 viewport의 100%를 차지, 지정한값 이상이면 114rem만큼 차지.
  background-color: #eee;
  margin: 0 auto; /*block요소안의 자식 block요소를 중앙정렬*/

  // not 가상선택자 : 인자가 아닌 요소만 선택한다.
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  [class^="col-"] { // 속성선택자. class속성이 col-로 시작하는('^'의 뜻) 요소 모두 선택
    // [class*="col-"] : class속성이  "col-" 문자열을 포함하는 요소 모두 선택
    // [class&="col-"] : class속성이  "col-" 로 끝나는 요소 모두 선택
    background-color: orangered;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 { // .row .col-1-of-2
    // calc() - css 계산 함수
    // calc()가 scss의 비슷한 함수랑 다른점 : 다른 유닛끼리 계산이 가능하다(ex: % + rem)
    width: calc((100% - #{$gutter-horizontal}) / 2);

  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }

}

// clearfix --> .row::after{~~}

